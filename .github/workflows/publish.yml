name: Publish Hex Package

on:
  push:
    tags:
      - 'v*'

permissions: read-all

jobs:
  build_release:
    name: NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        nif: ["2.15"]
        job:
          - { target: aarch64-apple-darwin        , os: macos-latest }
          - { target: aarch64-unknown-linux-gnu   , os: ubuntu-latest , use-cross: true }
          - { target: aarch64-unknown-linux-musl  , os: ubuntu-latest , use-cross: true }
          - { target: arm-unknown-linux-gnueabihf , os: ubuntu-latest , use-cross: true }
          - { target: riscv64gc-unknown-linux-gnu , os: ubuntu-latest , use-cross: true }
          - { target: x86_64-apple-darwin         , os: macos-latest }
          - { target: x86_64-pc-windows-gnu       , os: windows-latest }
          - { target: x86_64-pc-windows-msvc      , os: windows-latest }
          - { target: x86_64-unknown-linux-gnu    , os: ubuntu-latest }
          - { target: x86_64-unknown-linux-musl   , os: ubuntu-latest , use-cross: true }

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Extract project version
      shell: bash
      run: |
        # Get the project version from mix.exs
        echo "PROJECT_VERSION=$(sed -n 's/^  *version: *\"\(.*\)\".*/\1/p' mix.exs | head -n1)" >> $GITHUB_ENV

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        target: ${{ matrix.job.target }}

    - name: Build the project
      id: build-crate
      uses: philss/rustler-precompiled-action@v1.1.4
      with:
        project-name: pact_consumer_nif
        project-version: ${{ env.PROJECT_VERSION }}
        target: ${{ matrix.job.target }}
        nif-version: ${{ matrix.nif }}
        use-cross: ${{ matrix.job.use-cross }}
        project-dir: "native/pact_consumer_nif"

    - name: Publish archives and packages
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ steps.build-crate.outputs.file-path }}
  publish:
    name: Publish to Hex.pm
    runs-on: ubuntu-latest
    needs: build_release
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: 1.18
          otp-version: 27

      - name: Publish Package
        uses: synchronal/hex-publish-action@main
        with:
          key: ${{ secrets.HEX_API_KEY }}
          name: pact_consumer_ex
          tag-release: 'false'
